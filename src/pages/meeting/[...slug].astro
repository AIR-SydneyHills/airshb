---
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import Layout from '../../layouts/blog.astro'

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const meetings = await getCollection('meeting', ({ data }) => {
  return data.draft !== true
})

  return meetings.map((meeting, i) => ({
    params: { slug: meeting.slug },
    props: {
      meeting,
      prev: i > 0 ? meetings[i - 1] : undefined,
      next: i < meetings.length - 1 ? meetings[i + 1] : undefined
    }
  }))
}

export interface Props {
  meeting: CollectionEntry<'meeting'>
  prev: CollectionEntry<'meeting'>
  next: CollectionEntry<'meeting'>
}

// 2. When its time to render, you can get the entry directly from the prop
const { meeting, prev, next } = Astro.props

// 2. When it's time to render, you can get the entry directly from the prop
const { Content, remarkPluginFrontmatter } = await meeting.render()
let fixedpost = meeting
const rfrontmatter = remarkPluginFrontmatter as CollectionEntry<'blog'>['data']
if (rfrontmatter) {
  fixedpost.data.minutesRead = rfrontmatter.minutesRead
}
---

<Layout post={fixedpost} {prev} {next}>
  <Content />
</Layout>
